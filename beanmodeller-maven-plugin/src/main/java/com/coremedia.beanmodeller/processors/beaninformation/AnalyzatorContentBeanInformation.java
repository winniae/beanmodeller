package com.coremedia.beanmodeller.processors.beaninformation;

import java.util.HashSet;
import java.util.Set;

/**
 * The ContentBeanInformation generated by the Analyzator.
 */
public class AnalyzatorContentBeanInformation implements ContentBeanInformation {
  private AnalyzatorContentBeanInformation parent;
  private Set<AnalyzatorContentBeanInformation> childs = new HashSet<AnalyzatorContentBeanInformation>();
  private String documentName;
  private Class contentBean;
  private Set<PropertyInformation> properties = new HashSet<PropertyInformation>();
  private String name;

  AnalyzatorContentBeanInformation(Class beanClass) {
    this.contentBean = beanClass;
    name = contentBean.getSimpleName();
  }

  @Override
  public ContentBeanInformation getParent() {
    return parent;
  }

  @Override
  public Set<? extends ContentBeanInformation> getChilds() {
    return childs;
  }

  @Override
  public String getDocumentName() {
    return documentName;
  }

  @Override
  public String getName() {
    return name;
  }

  @Override
  public Class getContentBean() {
    return contentBean;
  }

  @Override
  public Set<? extends PropertyInformation> getProperties() {
    return properties;
  }

  public void setParent(AnalyzatorContentBeanInformation parent) {
    this.parent = parent;
    parent.addChild(this);
  }

  public void addChild(AnalyzatorContentBeanInformation child) {
    childs.add(child);
    child.parent = this;
  }

  public void setDocumentName(String documentName) {
    this.documentName = documentName;
  }

  public void setName(String name) {
    this.name = name;
  }

  public void setContentBean(Class contentBean) {
    this.contentBean = contentBean;
  }

  public void addProperty(PropertyInformation propertyInformation) {
    properties.add(propertyInformation);
  }

  @Override
  public String toString() {
    return "ContentBeanInformation [name: " + getDocumentName() + "; contentbeanclass: " + getContentBean() + "]";
  }
}
